#labels Featured,Phase-Implementation
*How to use XFileDialog in Java Swing*

=== Introduction ====

It's recommended to use XFileDialog to replace AWT's FileDialog. Since they have similar interface, a FileDialog object can be easily replaced with an XFileDialog object. 

It's recommended to make a test before using in your environment. 

=== Verify/Test at first ====
  * There's a helloworld.class included in the zip file. 
   
  * You could unpack the zip file and launch helloworld.class with a batch file "run.bat". 

  * If it could not work as expected, you could email me the console output, the Java version and OS info.   

=== Main procedures ====

   * Unpack the xfiledialog zip file. 

   * Copy the xfiledialog.dll and xfiledialog64.dll to your working directory or some folder included in system environment "PATH". 

   * Copy the xfiledialog.jar to some folder, and add xfiledialog.jar to your CLASSPATH.    
  
     You could also add the Java source code "XFileDialog.java" directly in your project instead of using the "xfiledialog.jar" in classpath. However, in this case, please do not change the package name "net.tomahawk". Otherwise, you should change the C code too. 

   * Write your code according to the "helloworld" sample on this page, pay attention to "Other details". 


===== For Ant Users====
    
   No specific requirements 

====  For Eclipse Users====
   No specific requirements   

=== Other Details ====


  * A XFileDialog object must be created in EDT thread, i.e., an XFileDialog should be defined in ActionListener functions. 
  
  * The xfiledialog.dll should be placed in the current working folder,  or  in a folder included in "PATH" (or java.library.path) so that it can be found by Java. 

  * Do not change the package name "net.tomahawk". If you had to, you should change some C code at the same time. 
     
  * XFileDialog may cause rendering artifacts when working with some third party Java LookandFeels. You can either switch to the default lookandfeels (NIMBUS,OCEAN,system) or ask authors of these LAFs for technical support. 

===A helloworld sample=== 

{{{

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import net.tomahawk.*; 

class helloworld extends JFrame implements ActionListener
{
  String title1= "Open File Dialog (single-selection)"; 
  String title2= "Open File Dialog (multi-selection)"; 
  String title3= "Open Folder Dialog (single-selection for folder)";  
  String title4= "Open Folder Dialog (multi-selection for folders)";  
  String title5 = "Open Thumbnail Dialog (multi-selection)"; 
  private JTextField selectioncontent; 
  
  public helloworld()
  {


    setDefaultCloseOperation(EXIT_ON_CLOSE);
    setLocation(200,160);
    JPanel main = new JPanel(new BorderLayout());
    JButton button1 = new JButton(title1);
    JButton button2 = new JButton(title2);
    JButton button3 = new JButton(title3);
    JButton button4 = new JButton(title4);
    JButton button5 = new JButton(title5);

    JLabel label1 = new JLabel("Selection:"); 
    selectioncontent = new JTextField();

    main.setLayout(new FlowLayout()); 
    this.setPreferredSize(new Dimension(600, 400)); 
    label1.setPreferredSize(new Dimension(500, 40)); 
    selectioncontent.setPreferredSize(new Dimension(500, 25)); 
    button1.setPreferredSize(new Dimension(500, 50)); 
    button2.setPreferredSize(new Dimension(500, 50)); 
    button3.setPreferredSize(new Dimension(500, 50)); 
    button4.setPreferredSize(new Dimension(500, 50)); 
    button5.setPreferredSize(new Dimension(500, 50)); 

    main.add(label1); 
    main.add(selectioncontent);
    main.add(button1);
    main.add(button2); 
    main.add(button3); 
    main.add(button4); 
    main.add(button5); 


    getContentPane().add(main);
    setTitle("Hello world"); 
    button1.addActionListener(this); 
    button2.addActionListener(this); 
    button3.addActionListener(this); 
    button4.addActionListener(this); 
    button5.addActionListener(this); 

   pack(); 
  }
   
   public void actionPerformed(ActionEvent e)
   {

    String action = e.getActionCommand();  	   

    if(action.equals(title1))  // get single file 
    {
    XFileDialog dlg=new XFileDialog(helloworld.this);    
    dlg.setMode(FileDialog.LOAD); 
    dlg.setTitle(title1); 
    dlg.show(); 
    String content =dlg.getFile(); 
    selectioncontent.setText("filename:" + content); 
    
    System.out.println("current Dir: " + dlg.getDirectory() ); 

    dlg.dispose(); 

    }

    if(action.equals(title2) )  // get multi-files
    {
    XFileDialog dlg=new XFileDialog(helloworld.this);    
    dlg.setMode(FileDialog.LOAD); 
    dlg.setMultiSelectionEnabled(true); 
    dlg.setTitle(title2); 
    dlg.show(); 
    String content =null; 
    String[] filenames = dlg.getFiles(); 
    
    if(filenames!=null && filenames.length>0) 
    {
    content=""; 	    
    for(int i=0;i<filenames.length;i++) 
    {
	    System.out.println("returned filenames in helloworld: " + filenames[i]); 
	    content+= filenames[i] + "; "; 
    }

      System.out.println("current dir: " + dlg.getDirectory() ); 

    }
    selectioncontent.setText("filenames:    " + content); 
    dlg.dispose(); 

    }


    if(action.equals(title3) )  // get a folder
    {
    XFileDialog dlg=new XFileDialog(helloworld.this);    
    dlg.setTitle(title3); 
    dlg.show(); 
    String content = dlg.getFolder(); 

    selectioncontent.setText("folder name:    " + content); 

    System.out.println("current Dir: " + dlg.getDirectory() ); 

    dlg.dispose(); 

    }

    if(action.equals(title4) )  // get folders
    {
    XFileDialog dlg=new XFileDialog(helloworld.this);    
    dlg.setTitle(title4); 
    dlg.show(); 
    String[] itemNames = dlg.getFolders(); 
    if(itemNames!=null && itemNames.length > 0) 
    {
    String content= ""; 	    
    for(int i=0;i<itemNames.length;i++)	    
    content += itemNames[i] + ";"; 	    
    selectioncontent.setText("folder names:    " + content); 
    }
    System.out.println("current Dir: " + dlg.getDirectory() ); 
    dlg.dispose(); 

    }


    if(action.equals(title5) )  // get files in thumbnail mode 
    {
    XFileDialog dlg=new XFileDialog(helloworld.this);    
    dlg.setMode(FileDialog.LOAD); 
    dlg.setMultiSelectionEnabled(true); 
    dlg.setThumbnail(true); 
    dlg.setTitle(title5); 
    dlg.show(); 
    String content =null; 
    String[] filenames = dlg.getFiles(); 
    
    if(filenames!=null && filenames.length>0) 
    {
    content=""; 	    
    for(int i=0;i<filenames.length;i++) 
    {
	    System.out.println("returned filenames in helloworld: " + filenames[i]); 
	    content+= filenames[i] + "; "; 
    }
    }
    selectioncontent.setText("filenames:    " + content); 
    System.out.println("current Dir: " + dlg.getDirectory() ); 

    dlg.dispose(); 

    }


    }


public static void main(String[] args)
	{
	new helloworld().setVisible(true);
	}


}







}}}